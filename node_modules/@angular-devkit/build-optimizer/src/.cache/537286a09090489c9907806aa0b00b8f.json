{"remainingRequest":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\Standar Portal\\node_modules\\@angular-redux\\store\\lib\\src\\components\\root-store.js","dependencies":[{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-redux\\store\\lib\\src\\components\\root-store.js","mtime":1527648735000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624878985141},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar __extends = /*@__PURE__*/ require(\"tslib\").__extends;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar redux_1 = require(\"redux\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar ng_redux_1 = require(\"./ng-redux\");\r\nvar selectors_1 = require(\"./selectors\");\r\nvar assert_1 = require(\"../utils/assert\");\r\nvar sub_store_1 = require(\"./sub-store\");\r\nvar fractal_reducer_map_1 = require(\"./fractal-reducer-map\");\r\n/** @hidden */\r\nvar RootStore = /** @class */ /*@__PURE__*/ (function (_super) {\r\n    __extends(RootStore, _super);\r\n    function RootStore(ngZone) {\r\n        var _this = _super.call(this) || this;\r\n        _this.ngZone = ngZone;\r\n        _this._store = undefined;\r\n        _this.configureStore = function (rootReducer, initState, middleware, enhancers) {\r\n            if (middleware === void 0) {\r\n                middleware = [];\r\n            }\r\n            if (enhancers === void 0) {\r\n                enhancers = [];\r\n            }\r\n            assert_1.assert(!_this._store, 'Store already configured!');\r\n            // Variable-arity compose in typescript FTW.\r\n            _this.setStore(redux_1.compose.apply(null, [redux_1.applyMiddleware.apply(void 0, middleware)].concat(enhancers))(redux_1.createStore)(fractal_reducer_map_1.enableFractalReducers(rootReducer), initState));\r\n        };\r\n        _this.provideStore = function (store) {\r\n            assert_1.assert(!_this._store, 'Store already configured!');\r\n            _this.setStore(store);\r\n        };\r\n        _this.getState = function () { return _this._store.getState(); };\r\n        _this.subscribe = function (listener) {\r\n            return _this._store.subscribe(listener);\r\n        };\r\n        _this.replaceReducer = function (nextReducer) {\r\n            _this._store.replaceReducer(nextReducer);\r\n        };\r\n        _this.dispatch = function (action) {\r\n            assert_1.assert(!!_this._store, 'Dispatch failed: did you forget to configure your store? ' +\r\n                'https://github.com/angular-redux/@angular-redux/core/blob/master/' +\r\n                'README.md#quick-start');\r\n            if (!core_1.NgZone.isInAngularZone()) {\r\n                return _this.ngZone.run(function () { return _this._store.dispatch(action); });\r\n            }\r\n            else {\r\n                return _this._store.dispatch(action);\r\n            }\r\n        };\r\n        _this.select = function (selector, comparator) {\r\n            return _this._store$.pipe(operators_1.distinctUntilChanged(), operators_1.map(selectors_1.resolveToFunctionSelector(selector)), operators_1.distinctUntilChanged(comparator));\r\n        };\r\n        _this.configureSubStore = function (basePath, localReducer) {\r\n            return new sub_store_1.SubStore(_this, basePath, localReducer);\r\n        };\r\n        _this.storeToObservable = function (store) {\r\n            return new rxjs_1.Observable(function (observer) {\r\n                observer.next(store.getState());\r\n                var unsubscribeFromRedux = store.subscribe(function () {\r\n                    return observer.next(store.getState());\r\n                });\r\n                return function () {\r\n                    unsubscribeFromRedux();\r\n                    observer.complete();\r\n                };\r\n            });\r\n        };\r\n        ng_redux_1.NgRedux.instance = _this;\r\n        _this._store$ = new rxjs_1.BehaviorSubject(undefined).pipe(operators_1.filter(function (n) { return n !== undefined; }), operators_1.switchMap(function (observableStore) { return observableStore; })\r\n        // TODO: fix this? needing to explicitly cast this is wrong\r\n        );\r\n        return _this;\r\n    }\r\n    RootStore.prototype.setStore = function (store) {\r\n        this._store = store;\r\n        var storeServable = this.storeToObservable(store);\r\n        this._store$.next(storeServable);\r\n    };\r\n    return RootStore;\r\n}(ng_redux_1.NgRedux));\r\nexports.RootStore = RootStore;\r\n",null]}