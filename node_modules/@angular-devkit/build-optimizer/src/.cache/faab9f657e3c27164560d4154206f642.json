{"remainingRequest":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\Standar Portal\\node_modules\\@swimlane\\ngx-datatable\\release\\components\\columns\\column.directive.js","dependencies":[{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@swimlane\\ngx-datatable\\release\\components\\columns\\column.directive.js","mtime":499162500000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624878985141},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar column_header_directive_1 = require(\"./column-header.directive\");\nvar column_cell_directive_1 = require(\"./column-cell.directive\");\nvar column_changes_service_1 = require(\"../../services/column-changes.service\");\nvar DataTableColumnDirective = /** @class */ /*@__PURE__*/ (function () {\n    function DataTableColumnDirective(columnChangesService) {\n        this.columnChangesService = columnChangesService;\n        this.isFirstChange = true;\n    }\n    DataTableColumnDirective.prototype.ngOnChanges = function () {\n        if (this.isFirstChange) {\n            this.isFirstChange = false;\n        }\n        else {\n            this.columnChangesService.onInputChange();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], DataTableColumnDirective.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"prop\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"frozenLeft\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"frozenRight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableColumnDirective.prototype, \"flexGrow\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"resizeable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"comparator\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"pipe\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"sortable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"draggable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"canAutoResize\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableColumnDirective.prototype, \"minWidth\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableColumnDirective.prototype, \"width\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DataTableColumnDirective.prototype, \"maxWidth\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"checkboxable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DataTableColumnDirective.prototype, \"headerCheckboxable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"headerClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DataTableColumnDirective.prototype, \"cellClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Function)\n    ], DataTableColumnDirective.prototype, \"summaryFunc\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], DataTableColumnDirective.prototype, \"summaryTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        core_1.ContentChild(column_cell_directive_1.DataTableColumnCellDirective, { read: core_1.TemplateRef }),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], DataTableColumnDirective.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        core_1.ContentChild(column_header_directive_1.DataTableColumnHeaderDirective, { read: core_1.TemplateRef }),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], DataTableColumnDirective.prototype, \"headerTemplate\", void 0);\n    DataTableColumnDirective = __decorate([\n        core_1.Directive({ selector: 'ngx-datatable-column' })\n    ], DataTableColumnDirective);\n    return DataTableColumnDirective;\n}());\nexports.DataTableColumnDirective = DataTableColumnDirective;\n",null]}