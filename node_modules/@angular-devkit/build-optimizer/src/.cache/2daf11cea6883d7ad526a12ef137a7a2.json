{"remainingRequest":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\Standar Portal\\node_modules\\jquery-color\\jquery.color.js","dependencies":[{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\jquery-color\\jquery.color.js","mtime":1332079803000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\imports-loader\\index.js","mtime":1519153988000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624878985141},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/*\n * jQuery Color Animations v@VERSION\n * http://jquery.org/\n *\n * Copyright 2011 John Resig\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * Date: @DATE\n */\n\n(function( jQuery, undefined ){\n\tvar stepHooks = \"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color outlineColor\".split(\" \"),\n\n\t\t// plusequals test for += 100 -= 100\n\t\trplusequals = /^([\\-+])=\\s*(\\d+\\.?\\d*)/,\n\t\t// a set of RE's that can match strings and generate color tuples.\n\t\tstringParsers = [{\n\t\t\t\tre: /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n\t\t\t\tparse: function( execResult ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\texecResult[ 1 ],\n\t\t\t\t\t\texecResult[ 2 ],\n\t\t\t\t\t\texecResult[ 3 ],\n\t\t\t\t\t\texecResult[ 4 ]\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tre: /rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n\t\t\t\tparse: function( execResult ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t2.55 * execResult[1],\n\t\t\t\t\t\t2.55 * execResult[2],\n\t\t\t\t\t\t2.55 * execResult[3],\n\t\t\t\t\t\texecResult[ 4 ]\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tre: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,\n\t\t\t\tparse: function( execResult ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tparseInt( execResult[ 1 ], 16 ),\n\t\t\t\t\t\tparseInt( execResult[ 2 ], 16 ),\n\t\t\t\t\t\tparseInt( execResult[ 3 ], 16 )\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tre: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,\n\t\t\t\tparse: function( execResult ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tparseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),\n\t\t\t\t\t\tparseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),\n\t\t\t\t\t\tparseInt( execResult[ 3 ] + execResult[ 3 ], 16 )\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tre: /hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n\t\t\t\tspace: \"hsla\",\n\t\t\t\tparse: function( execResult ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\texecResult[1],\n\t\t\t\t\t\texecResult[2] / 100,\n\t\t\t\t\t\texecResult[3] / 100,\n\t\t\t\t\t\texecResult[4]\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}],\n\n\t\t// jQuery.Color( )\n\t\tcolor = jQuery.Color = function( color, green, blue, alpha ) {\n\t\t\treturn new jQuery.Color.fn.parse( color, green, blue, alpha );\n\t\t},\n\t\tspaces = {\n\t\t\trgba: {\n\t\t\t\tcache: \"_rgba\",\n\t\t\t\tprops: {\n\t\t\t\t\tred: {\n\t\t\t\t\t\tidx: 0,\n\t\t\t\t\t\ttype: \"byte\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t},\n\t\t\t\t\tgreen: {\n\t\t\t\t\t\tidx: 1,\n\t\t\t\t\t\ttype: \"byte\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t},\n\t\t\t\t\tblue: {\n\t\t\t\t\t\tidx: 2,\n\t\t\t\t\t\ttype: \"byte\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t},\n\t\t\t\t\talpha: {\n\t\t\t\t\t\tidx: 3,\n\t\t\t\t\t\ttype: \"percent\",\n\t\t\t\t\t\tdef: 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\thsla: {\n\t\t\t\tcache: \"_hsla\",\n\t\t\t\tprops: {\n\t\t\t\t\thue: {\n\t\t\t\t\t\tidx: 0,\n\t\t\t\t\t\ttype: \"degrees\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t},\n\t\t\t\t\tsaturation: {\n\t\t\t\t\t\tidx: 1,\n\t\t\t\t\t\ttype: \"percent\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t},\n\t\t\t\t\tlightness: {\n\t\t\t\t\t\tidx: 2,\n\t\t\t\t\t\ttype: \"percent\",\n\t\t\t\t\t\tempty: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpropTypes = {\n\t\t\t\"byte\": {\n\t\t\t\tfloor: true,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 255\n\t\t\t},\n\t\t\t\"percent\": {\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 1\n\t\t\t},\n\t\t\t\"degrees\": {\n\t\t\t\tmod: 360,\n\t\t\t\tfloor: true\n\t\t\t}\n\t\t},\n\t\trgbaspace = spaces.rgba.props,\n\t\tsupport = color.support = {},\n\n\t\t// colors = jQuery.Color.names\n\t\tcolors,\n\n\t\t// local aliases of functions called often\n\t\teach = jQuery.each;\n\n\tspaces.hsla.props.alpha = rgbaspace.alpha;\n\n\tfunction clamp( value, prop, alwaysAllowEmpty ) {\n\t\tvar type = propTypes[ prop.type ] || {},\n\t\t\tallowEmpty = prop.empty || alwaysAllowEmpty;\n\n\t\tif ( allowEmpty && value == null ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( prop.def && value == null ) {\n\t\t\treturn prop.def;\n\t\t}\n\t\tif ( type.floor ) {\n\t\t\tvalue = ~~value;\n\t\t} else {\n\t\t\tvalue = parseFloat( value );\n\t\t}\n\t\tif ( value == null || isNaN( value ) ) {\n\t\t\treturn prop.def;\n\t\t}\n\t\tif ( type.mod ) {\n\t\t\tvalue = value % type.mod;\n\t\t\t// -10 -> 350\n\t\t\treturn value < 0 ? type.mod + value : value;\n\t\t}\n\n\t\t// for now all property types without mod have min and max\n\t\treturn type.min > value ? type.min : type.max < value ? type.max : value;\n\t}\n\n\tfunction stringParse( string ) {\n\t\tvar inst = color(),\n\t\t\trgba = inst._rgba = [];\n\n\t\tstring = string.toLowerCase();\n\n\t\teach( stringParsers, function( i, parser ) {\n\t\t\tvar match = parser.re.exec( string ),\n\t\t\t\tvalues = match && parser.parse( match ),\n\t\t\t\tparsed,\n\t\t\t\tspaceName = parser.space || \"rgba\",\n\t\t\t\tcache = spaces[ spaceName ].cache;\n\n\n\t\t\tif ( values ) {\n\t\t\t\tparsed = inst[ spaceName ]( values );\n\n\t\t\t\t// if this was an rgba parse the assignment might happen twice\n\t\t\t\t// oh well....\n\t\t\t\tinst[ cache ] = parsed[ cache ];\n\t\t\t\trgba = inst._rgba = parsed._rgba;\n\n\t\t\t\t// exit each( stringParsers ) here because we matched\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\t// Found a stringParser that handled it\n\t\tif ( rgba.length !== 0 ) {\n\n\t\t\t// if this came from a parsed string, force \"transparent\" when alpha is 0\n\t\t\t// chrome, (and maybe others) return \"transparent\" as rgba(0,0,0,0)\n\t\t\tif ( Math.max.apply( Math, rgba ) === 0 ) {\n\t\t\t\tjQuery.extend( rgba, colors.transparent );\n\t\t\t}\n\t\t\treturn inst;\n\t\t}\n\n\t\t// named colors / default - filter back through parse function\n\t\tif ( string = colors[ string ] ) {\n\t\t\treturn string;\n\t\t}\n\t}\n\n\tcolor.fn = color.prototype = {\n\t\tconstructor: color,\n\t\tparse: function( red, green, blue, alpha ) {\n\t\t\tif ( red === undefined ) {\n\t\t\t\tthis._rgba = [ null, null, null, null ];\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( red instanceof jQuery || red.nodeType ) {\n\t\t\t\tred = red instanceof jQuery ? red.css( green ) : jQuery( red ).css( green );\n\t\t\t\tgreen = undefined;\n\t\t\t}\n\n\t\t\tvar inst = this,\n\t\t\t\ttype = jQuery.type( red ),\n\t\t\t\trgba = this._rgba = [],\n\t\t\t\tsource;\n\n\t\t\t// more than 1 argument specified - assume ( red, green, blue, alpha )\n\t\t\tif ( green !== undefined ) {\n\t\t\t\tred = [ red, green, blue, alpha ];\n\t\t\t\ttype = \"array\";\n\t\t\t}\n\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\treturn this.parse( stringParse( red ) || colors._default );\n\t\t\t}\n\n\t\t\tif ( type === \"array\" ) {\n\t\t\t\teach( rgbaspace, function( key, prop ) {\n\t\t\t\t\trgba[ prop.idx ] = clamp( red[ prop.idx ], prop );\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif ( type === \"object\" ) {\n\t\t\t\tif ( red instanceof color ) {\n\t\t\t\t\teach( spaces, function( spaceName, space ) {\n\t\t\t\t\t\tif ( red[ space.cache ] ) {\n\t\t\t\t\t\t\tinst[ space.cache ] = red[ space.cache ].slice();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\teach( spaces, function( spaceName, space ) {\n\t\t\t\t\t\teach( space.props, function( key, prop ) {\n\t\t\t\t\t\t\tvar cache = space.cache;\n\n\t\t\t\t\t\t\t// if the cache doesn't exist, and we know how to convert\n\t\t\t\t\t\t\tif ( !inst[ cache ] && space.to ) {\n\n\t\t\t\t\t\t\t\t// if the value was null, we don't need to copy it\n\t\t\t\t\t\t\t\t// if the key was alpha, we don't need to copy it either\n\t\t\t\t\t\t\t\tif ( red[ key ] == null || key === \"alpha\") {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinst[ cache ] = space.to( inst._rgba );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// this is the only case where we allow nulls for ALL properties.\n\t\t\t\t\t\t\t// call clamp with alwaysAllowEmpty\n\t\t\t\t\t\t\tinst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tis: function( compare ) {\n\t\t\tvar is = color( compare ),\n\t\t\t\tsame = true,\n\t\t\t\tmyself = this;\n\n\t\t\teach( spaces, function( _, space ) {\n\t\t\t\tvar isCache = is[ space.cache ],\n\t\t\t\t\tlocalCache;\n\t\t\t\tif (isCache) {\n\t\t\t\t\tlocalCache = myself[ space.cache ] || space.to && space.to( myself._rgba ) || [];\n\t\t\t\t\teach( space.props, function( _, prop ) {\n\t\t\t\t\t\tif ( isCache[ prop.idx ] != null ) {\n\t\t\t\t\t\t\tsame = ( isCache[ prop.idx ] == localCache[ prop.idx ] );\n\t\t\t\t\t\t\treturn same;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn same;\n\t\t\t});\n\t\t\treturn same;\n\t\t},\n\t\t_space: function() {\n\t\t\tvar used = [],\n\t\t\t\tinst = this;\n\t\t\teach( spaces, function( spaceName, space ) {\n\t\t\t\tif ( inst[ space.cache ] ) {\n\t\t\t\t\tused.push( spaceName );\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn used.pop();\n\t\t},\n\t\ttransition: function( other, distance ) {\n\t\t\tvar end = color( other ),\n\t\t\t\tspaceName = end._space(),\n\t\t\t\tspace = spaces[ spaceName ],\n\t\t\t\tstart = this[ space.cache ] || space.to( this._rgba ),\n\t\t\t\tresult = start.slice();\n\n\t\t\tend = end[ space.cache ];\n\t\t\teach( space.props, function( key, prop ) {\n\t\t\t\tvar index = prop.idx,\n\t\t\t\t\tstartValue = start[ index ],\n\t\t\t\t\tendValue = end[ index ],\n\t\t\t\t\ttype = propTypes[ prop.type ] || {};\n\n\t\t\t\t// if null, don't override start value\n\t\t\t\tif ( endValue === null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// if null - use end\n\t\t\t\tif ( startValue === null ) {\n\t\t\t\t\tresult[ index ] = endValue;\n\t\t\t\t} else {\n\t\t\t\t\tif ( type.mod ) {\n\t\t\t\t\t\tif ( endValue - startValue > type.mod / 2 ) {\n\t\t\t\t\t\t\tstartValue += type.mod;\n\t\t\t\t\t\t} else if ( startValue - endValue > type.mod / 2 ) {\n\t\t\t\t\t\t\tstartValue -= type.mod;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult[ prop.idx ] = clamp( ( endValue - startValue ) * distance + startValue, prop );\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this[ spaceName ]( result );\n\t\t},\n\t\tblend: function( opaque ) {\n\t\t\t// if we are already opaque - return ourself\n\t\t\tif ( this._rgba[ 3 ] === 1 ) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar rgb = this._rgba.slice(),\n\t\t\t\ta = rgb.pop(),\n\t\t\t\tblend = color( opaque )._rgba;\n\n\t\t\treturn color( jQuery.map( rgb, function( v, i ) {\n\t\t\t\treturn ( 1 - a ) * blend[ i ] + a * v;\n\t\t\t}));\n\t\t},\n\t\ttoRgbaString: function() {\n\t\t\tvar prefix = \"rgba(\",\n\t\t\t\trgba = jQuery.map( this._rgba, function( v, i ) {\n\t\t\t\t\treturn v == null ? ( i > 2 ? 1 : 0 ) : v;\n\t\t\t\t});\n\n\t\t\tif ( rgba[ 3 ] === 1 ) {\n\t\t\t\trgba.pop();\n\t\t\t\tprefix = \"rgb(\";\n\t\t\t}\n\n\t\t\treturn prefix + rgba.join(\",\") + \")\";\n\t\t},\n\t\ttoHslaString: function() {\n\t\t\tvar prefix = \"hsla(\",\n\t\t\t\thsla = jQuery.map( this.hsla(), function( v, i ) {\n\t\t\t\t\tif ( v == null ) {\n\t\t\t\t\t\tv = i > 2 ? 1 : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// catch 1 and 2\n\t\t\t\t\tif ( i && i < 3 ) {\n\t\t\t\t\t\tv = Math.round( v * 100 ) + \"%\";\n\t\t\t\t\t}\n\t\t\t\t\treturn v;\n\t\t\t\t});\n\n\t\t\tif ( hsla[ 3 ] == 1 ) {\n\t\t\t\thsla.pop();\n\t\t\t\tprefix = \"hsl(\";\n\t\t\t}\n\t\t\treturn prefix + hsla.join(\",\") + \")\";\n\t\t},\n\t\ttoHexString: function( includeAlpha ) {\n\t\t\tvar rgba = this._rgba.slice(),\n\t\t\t\talpha = rgba.pop();\n\n\t\t\tif ( includeAlpha ) {\n\t\t\t\trgba.push( ~~( alpha * 255 ) );\n\t\t\t}\n\n\t\t\treturn \"#\" + jQuery.map( rgba, function( v, i ) {\n\n\t\t\t\t// default to 0 when nulls exist\n\t\t\t\tv = ( v || 0 ).toString( 16 );\n\t\t\t\treturn v.length == 1 ? \"0\" + v : v;\n\t\t\t}).join(\"\");\n\t\t},\n\t\ttoString: function() {\n\t\t\treturn this._rgba[ 3 ] === 0 ? \"transparent\" : this.toRgbaString();\n\t\t}\n\t};\n\tcolor.fn.parse.prototype = color.fn;\n\n\t// hsla conversions adapted from:\n\t// http://www.google.com/codesearch/p#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/inspector/front-end/Color.js&d=7&l=193\n\n\tfunction hue2rgb( p, q, h ) {\n\t\th = ( h + 1 ) % 1;\n\t\tif ( h * 6 < 1 ) {\n\t\t\treturn p + (q - p) * 6 * h;\n\t\t}\n\t\tif ( h * 2 < 1) {\n\t\t\treturn q;\n\t\t}\n\t\tif ( h * 3 < 2 ) {\n\t\t\treturn p + (q - p) * ((2/3) - h) * 6;\n\t\t}\n\t\treturn p;\n\t}\n\n\tspaces.hsla.to = function ( rgba ) {\n\t\tif ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {\n\t\t\treturn [ null, null, null, rgba[ 3 ] ];\n\t\t}\n\t\tvar r = rgba[ 0 ] / 255,\n\t\t\tg = rgba[ 1 ] / 255,\n\t\t\tb = rgba[ 2 ] / 255,\n\t\t\ta = rgba[ 3 ],\n\t\t\tmax = Math.max( r, g, b ),\n\t\t\tmin = Math.min( r, g, b ),\n\t\t\tdiff = max - min,\n\t\t\tadd = max + min,\n\t\t\tl = add * 0.5,\n\t\t\th, s;\n\n\t\tif ( min === max ) {\n\t\t\th = 0;\n\t\t} else if ( r === max ) {\n\t\t\th = ( 60 * ( g - b ) / diff ) + 360;\n\t\t} else if ( g === max ) {\n\t\t\th = ( 60 * ( b - r ) / diff ) + 120;\n\t\t} else {\n\t\t\th = ( 60 * ( r - g ) / diff ) + 240;\n\t\t}\n\n\t\tif ( l === 0 || l === 1 ) {\n\t\t\ts = l;\n\t\t} else if ( l <= 0.5 ) {\n\t\t\ts = diff / add;\n\t\t} else {\n\t\t\ts = diff / ( 2 - add );\n\t\t}\n\t\treturn [ Math.round(h) % 360, s, l, a == null ? 1 : a ];\n\t};\n\n\tspaces.hsla.from = function ( hsla ) {\n\t\tif ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {\n\t\t\treturn [ null, null, null, hsla[ 3 ] ];\n\t\t}\n\t\tvar h = hsla[ 0 ] / 360,\n\t\t\ts = hsla[ 1 ],\n\t\t\tl = hsla[ 2 ],\n\t\t\ta = hsla[ 3 ],\n\t\t\tq = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,\n\t\t\tp = 2 * l - q,\n\t\t\tr, g, b;\n\n\t\treturn [\n\t\t\tMath.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),\n\t\t\tMath.round( hue2rgb( p, q, h ) * 255 ),\n\t\t\tMath.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),\n\t\t\ta\n\t\t];\n\t};\n\n\n\teach( spaces, function( spaceName, space ) {\n\t\tvar props = space.props,\n\t\t\tcache = space.cache,\n\t\t\tto = space.to,\n\t\t\tfrom = space.from;\n\n\t\t// makes rgba() and hsla()\n\t\tcolor.fn[ spaceName ] = function( value ) {\n\n\t\t\t// generate a cache for this space if it doesn't exist\n\t\t\tif ( to && !this[ cache ] ) {\n\t\t\t\tthis[ cache ] = to( this._rgba );\n\t\t\t}\n\t\t\tif ( value === undefined ) {\n\t\t\t\treturn this[ cache ].slice();\n\t\t\t}\n\n\t\t\tvar type = jQuery.type( value ),\n\t\t\t\tarr = ( type === \"array\" || type === \"object\" ) ? value : arguments,\n\t\t\t\tlocal = this[ cache ].slice(),\n\t\t\t\tret;\n\n\t\t\teach( props, function( key, prop ) {\n\t\t\t\tvar val = arr[ type === \"object\" ? key : prop.idx ];\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\tval = local[ prop.idx ];\n\t\t\t\t}\n\t\t\t\tlocal[ prop.idx ] = clamp( val, prop );\n\t\t\t});\n\n\t\t\tif ( from ) {\n\t\t\t\tret = color( from( local ) );\n\t\t\t\tret[ cache ] = local;\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\treturn color( local );\n\t\t\t}\n\t\t};\n\n\t\t// makes red() green() blue() alpha() hue() saturation() lightness()\n\t\teach( props, function( key, prop ) {\n\t\t\t// alpha is included in more than one space\n\t\t\tif ( color.fn[ key ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcolor.fn[ key ] = function( value ) {\n\t\t\t\tvar vtype = jQuery.type( value ),\n\t\t\t\t\tfn = ( key === 'alpha' ? ( this._hsla ? 'hsla' : 'rgba' ) : spaceName ),\n\t\t\t\t\tlocal = this[ fn ](),\n\t\t\t\t\tcur = local[ prop.idx ],\n\t\t\t\t\tmatch;\n\n\t\t\t\tif ( vtype === \"undefined\" ) {\n\t\t\t\t\treturn cur;\n\t\t\t\t}\n\n\t\t\t\tif ( vtype === \"function\" ) {\n\t\t\t\t\tvalue = value.call( this, cur );\n\t\t\t\t\tvtype = jQuery.type( value );\n\t\t\t\t}\n\t\t\t\tif ( value == null && prop.empty ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tif ( vtype === \"string\" ) {\n\t\t\t\t\tmatch = rplusequals.exec( value );\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\tvalue = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === \"+\" ? 1 : -1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlocal[ prop.idx ] = value;\n\t\t\t\treturn this[ fn ]( local );\n\t\t\t};\n\t\t});\n\t});\n\n\t// add .fx.step functions\n\teach( stepHooks, function( i, hook ) {\n\t\tjQuery.cssHooks[ hook ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar parsed;\n\n\t\t\t\tif ( jQuery.type( value ) !== 'string' || ( parsed = stringParse( value ) ) )\n\t\t\t\t{\n\t\t\t\t\tvalue = color( parsed || value );\n\t\t\t\t\tif ( !support.rgba && value._rgba[ 3 ] !== 1 ) {\n\t\t\t\t\t\tvar backgroundColor,\n\t\t\t\t\t\t\tcurElem = hook === \"backgroundColor\" ? elem.parentNode : elem;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tbackgroundColor = jQuery.curCSS( curElem, \"backgroundColor\" );\n\t\t\t\t\t\t} while (\n\t\t\t\t\t\t\t( backgroundColor === \"\" || backgroundColor === \"transparent\" ) &&\n\t\t\t\t\t\t\t( curElem = curElem.parentNode ) &&\n\t\t\t\t\t\t\tcurElem.style\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue = value.blend( backgroundColor && backgroundColor !== \"transparent\" ?\n\t\t\t\t\t\t\tbackgroundColor :\n\t\t\t\t\t\t\t\"_default\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.toRgbaString();\n\t\t\t\t}\n\t\t\t\telem.style[ hook ] = value;\n\t\t\t}\n\t\t};\n\t\tjQuery.fx.step[ hook ] = function( fx ) {\n\t\t\tif ( !fx.colorInit ) {\n\t\t\t\tfx.start = color( fx.elem, hook );\n\t\t\t\tfx.end = color( fx.end );\n\t\t\t\tfx.colorInit = true;\n\t\t\t}\n\t\t\tjQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );\n\t\t};\n\t});\n\n\t// detect rgba support\n\tjQuery(function() {\n\t\tvar div = document.createElement( \"div\" ),\n\t\t\tdiv_style = div.style;\n\n\t\tdiv_style.cssText = \"background-color:rgba(1,1,1,.5)\";\n\t\tsupport.rgba = div_style.backgroundColor.indexOf( \"rgba\" ) > -1;\n\t});\n\n\t// Some named colors to work with\n\t// From Interface by Stefan Petre\n\t// http://interface.eyecon.ro/\n\tcolors = jQuery.Color.names = {\n\t\taqua: \"#00ffff\",\n\t\tazure: \"#f0ffff\",\n\t\tbeige: \"#f5f5dc\",\n\t\tblack: \"#000000\",\n\t\tblue: \"#0000ff\",\n\t\tbrown: \"#a52a2a\",\n\t\tcyan: \"#00ffff\",\n\t\tdarkblue: \"#00008b\",\n\t\tdarkcyan: \"#008b8b\",\n\t\tdarkgrey: \"#a9a9a9\",\n\t\tdarkgreen: \"#006400\",\n\t\tdarkkhaki: \"#bdb76b\",\n\t\tdarkmagenta: \"#8b008b\",\n\t\tdarkolivegreen: \"#556b2f\",\n\t\tdarkorange: \"#ff8c00\",\n\t\tdarkorchid: \"#9932cc\",\n\t\tdarkred: \"#8b0000\",\n\t\tdarksalmon: \"#e9967a\",\n\t\tdarkviolet: \"#9400d3\",\n\t\tfuchsia: \"#ff00ff\",\n\t\tgold: \"#ffd700\",\n\t\tgreen: \"#008000\",\n\t\tindigo: \"#4b0082\",\n\t\tkhaki: \"#f0e68c\",\n\t\tlightblue: \"#add8e6\",\n\t\tlightcyan: \"#e0ffff\",\n\t\tlightgreen: \"#90ee90\",\n\t\tlightgrey: \"#d3d3d3\",\n\t\tlightpink: \"#ffb6c1\",\n\t\tlightyellow: \"#ffffe0\",\n\t\tlime: \"#00ff00\",\n\t\tmagenta: \"#ff00ff\",\n\t\tmaroon: \"#800000\",\n\t\tnavy: \"#000080\",\n\t\tolive: \"#808000\",\n\t\torange: \"#ffa500\",\n\t\tpink: \"#ffc0cb\",\n\t\tpurple: \"#800080\",\n\t\tviolet: \"#800080\",\n\t\tred: \"#ff0000\",\n\t\tsilver: \"#c0c0c0\",\n\t\twhite: \"#ffffff\",\n\t\tyellow: \"#ffff00\",\n\t\ttransparent: [ null, null, null, 0 ],\n\t\t_default: \"#ffffff\"\n\t};\n})( jQuery );\n",null]}