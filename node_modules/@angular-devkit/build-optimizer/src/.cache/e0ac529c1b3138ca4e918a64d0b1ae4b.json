{"remainingRequest":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\Standar Portal\\node_modules\\ngx-bootstrap\\buttons\\button-radio-group.directive.js","dependencies":[{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\ngx-bootstrap\\buttons\\button-radio-group.directive.js","mtime":499162500000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624878985141},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { ChangeDetectorRef, Directive, ElementRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nexport var RADIO_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return ButtonRadioGroupDirective; }),\n    multi: true\n};\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\nvar ButtonRadioGroupDirective = /** @class */ /*@__PURE__*/ (function () {\n    function ButtonRadioGroupDirective(el, cdr) {\n        this.el = el;\n        this.cdr = cdr;\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n    }\n    Object.defineProperty(ButtonRadioGroupDirective.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            this._value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ButtonRadioGroupDirective.prototype.writeValue = function (value) {\n        this._value = value;\n        this.cdr.markForCheck();\n    };\n    ButtonRadioGroupDirective.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    ButtonRadioGroupDirective.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    return ButtonRadioGroupDirective;\n}());\nexport { ButtonRadioGroupDirective };\n//# sourceMappingURL=button-radio-group.directive.js.map\n",null]}