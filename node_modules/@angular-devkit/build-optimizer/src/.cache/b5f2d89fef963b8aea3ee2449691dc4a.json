{"remainingRequest":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Git Projects\\Standar Portal\\node_modules\\@angular-redux\\store\\lib\\src\\components\\ng-redux.js","dependencies":[{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-redux\\store\\lib\\src\\components\\ng-redux.js","mtime":1527648735000},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624878985141},{"path":"D:\\Git Projects\\Standar Portal\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * This is the public interface of @angular-redux/store. It wraps the global\r\n * redux store and adds a few other add on methods. It's what you'll inject\r\n * into your Angular application as a service.\r\n */\r\nvar NgRedux = /** @class */ /*@__PURE__*/ (function () {\r\n    function NgRedux() {\r\n    }\r\n    /** @hidden, @deprecated */\r\n    NgRedux.instance = undefined;\r\n    return NgRedux;\r\n}());\r\nexports.NgRedux = NgRedux;\r\n",null]}